ATOMGEN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${ATOMGEN_ROOT_DIR} ${ATOMGEN_SRC_DIR}

ATOMIC
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${ATOMIC_ROOT_DIR} ${ATOMIC_SRC_DIR}

ATOMSOLV
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${ATOMSOLV_ROOT_DIR} ${ATOMSOLV_SRC_DIR}

BLSURFPLUGIN
>  cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${BLSURFPLUGIN_ROOT_DIR} ${BLSURFPLUGIN_SRC_DIR}

BLSURFPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${BLSURFPLUGINWOGUI_ROOT_DIR} ${BLSURFPLUGIN_SRC_DIR}

CALCULATOR
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${CALCULATOR_ROOT_DIR} ${CALCULATOR_SRC_DIR}

COMPONENT 
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${COMPONENT_ROOT_DIR} ${COMPONENT_SRC_DIR}

DOCUMENTATION
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${DOCUMENTATION_ROOT_DIR} ${DOCUMENTATION_SRC_DIR}

GEOM
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_GEOM_USE_OPENCV=ON -DCMAKE_INSTALL_PREFIX=${GEOM_ROOT_DIR} ${GEOM_SRC_DIR}

> GEOMWOGUI
cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DSALOME_GEOM_USE_OPENCV=ON -DCMAKE_INSTALL_PREFIX=${GEOMWOGUI_ROOT_DIR} ${GEOM_SRC_DIR}

GHS3DPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${GHS3DPLUGIN_ROOT_DIR} ${GHS3DPLUGIN_SRC_DIR}

GHS3DPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${GHS3DPLUGINWOGUI_ROOT_DIR} ${GHS3DPLUGIN_SRC_DIR}

GHS3DPRLPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${GHS3DPRLPLUGIN_ROOT_DIR} ${GHS3DPRLPLUGIN_SRC_DIR}

GHS3DPRLPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${GHS3DPRLPLUGINWOGUI_ROOT_DIR} ${GHS3DPRLPLUGIN_SRC_DIR}

GMSHPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${GMSHPLUGIN_ROOT_DIR} ${GMSHPLUGIN_SRC_DIR}

GMSHPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${GMSHPLUGINWOGUI_ROOT_DIR} ${GMSHPLUGIN_SRC_DIR}

GUI
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${GUI_ROOT_DIR} ${GUI_SRC_DIR}

HELLO
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HELLO_ROOT_DIR} ${HELLO_SRC_DIR}

HEXABLOCK
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HEXABLOCK_ROOT_DIR} ${HEXABLOCK_SRC_DIR}

HEXABLOCKPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HEXABLOCKPLUGIN_ROOT_DIR} ${HEXABLOCKPLUGIN_SRC_DIR}

HexoticPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HexoticPLUGIN_ROOT_DIR} ${HexoticPLUGIN_SRC_DIR}

HexoticPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${HexoticPLUGINWOGUI_ROOT_DIR} ${HexoticPLUGIN_SRC_DIR}

HOMARD
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HOMARD_ROOT_DIR} ${HOMARD_SRC_DIR}

HYBRIDPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${HYBRIDPLUGIN_ROOT_DIR} ${HYBRIDPLUGIN_SRC_DIR}

HYBRIDPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${HYBRIDPLUGINWOGUI_ROOT_DIR} ${HYBRIDPLUGIN_SRC_DIR}

JOBMANAGER
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${JOBMANAGER_ROOT_DIR} ${JOBMANAGER_SRC_DIR}

KERNEL
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_USE_LIBBATCH=ON -DCMAKE_INSTALL_PREFIX=${KERNEL_ROOT_DIR} ${KERNEL_SRC_DIR}

KERNEL_OPT
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_USE_LIBBATCH=ON -DSALOME_USE_MPI=ON -DCMAKE_INSTALL_PREFIX=${KERNEL_OPT_ROOT_DIR} ${KERNEL_SRC_DIR}

LIBBATCH
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${LIBBATCH_ROOT_DIR} ${LIBBATCH_SRC_DIR}

LIGHT
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${LIGHT_ROOT_DIR} ${LIGHT_SRC_DIR}

FIELDS
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${FILEDS_ROOT_DIR} ${FIELDS_SRC_DIR}

MEDCOUPLING
> cmake -DCMAKE_BUILD_TYPE=Release -DMEDCOUPLING_USE_64BIT_IDS=ON -DCMAKE_INSTALL_PREFIX=${MEDCOUPLING_ROOT_DIR} ${MEDCOUPLING_SRC_DIR}

MEDCOUPLING_OPT
> cmake -DCMAKE_BUILD_TYPE=Release -DMEDCOUPLING_USE_64BIT_IDS=ON -DSALOME_USE_MPI=ON -DSALOME_MED_PARTITIONER_PARMETIS=OFF -DCMAKE_INSTALL_PREFIX=${MEDCOUPLING_OPT_ROOT_DIR} ${MEDCOUPLING_SRC_DIR}

MEDCOUPLINGMICRO
> cmake -DCMAKE_BUILD_TYPE=Release -DMEDCOUPLING_USE_64BIT_IDS=ON -DMEDCOUPLING_MICROMED=ON -DCMAKE_INSTALL_PREFIX=${MEDCOUPLINGMICRO_ROOT_DIR} ${MEDCOUPLIN_SRC_DIR}

FIELDSWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${FIELDSWOGUI_ROOT_DIR} ${FIELDS_SRC_DIR}

NETGENPLUGIN
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${NETGENPLUGIN_ROOT_DIR} ${NETGENPLUGIN_SRC_DIR}

NETGENPLUGINWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DCMAKE_INSTALL_PREFIX=${NETGENPLUGINWOGUI_ROOT_DIR} ${NETGENPLUGIN_SRC_DIR}

PARAVIS
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_PARAVIS_USE_GEOM_SOURCE=ON -DSALOME_PARAVIS_USE_SMESH_SOURCE=ON -DCMAKE_INSTALL_PREFIX=${PARAVIS_ROOT_DIR} ${PARAVIS_SRC_DIR}

PYCALCULATOR
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PYCALCULATOR_ROOT_DIR} ${PYCALCULATOR_SRC_DIR}

PYHELLO
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PYHELLO_ROOT_DIR} ${PYHELLO_SRC_DIR}

PYLIGHT
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${PYLIGHT_ROOT_DIR} ${PYLIGHT_SRC_DIR}

RANDOMIZER
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${RANDOMIZER_ROOT_DIR} ${RANDOMIZER_SRC_DIR}

SHAPER
> cmake -DCMAKE_BUILD_TYPE=Release  -DADD_COMPATIBILITY_TESTS=ON -DADD_MODELS_TESTS=ON -DCMAKE_INSTALL_PREFIX=${SHAPER_ROOT_DIR} ${SHAPER_SRC_DIR}

SIERPINSKY
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${SIERPINSKY_ROOT_DIR} ${SIERPINSKY_SRC_DIR}

SMESH
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_SMESH_USE_TBB=ON -DSALOME_SMESH_USE_CGNS=ON -DCMAKE_INSTALL_PREFIX=${SMESH_ROOT_DIR} ${SMESH_SRC_DIR}

SMESHWOGUI
> cmake -DCMAKE_BUILD_TYPE=Release -DSALOME_BUILD_GUI=OFF -DSALOME_SMESH_USE_TBB=ON -DSALOME_SMESH_USE_CGNS=ON -DCMAKE_INSTALL_PREFIX=${SMESHWOGUI_ROOT_DIR} ${SMESH_SRC_DIR}

YACS
> cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${YACS_ROOT_DIR} ${YACS_SRC_DIR}

YACSGEN
> python3 setup.py install --prefix=${YACSGEN_ROOT_DIR}

cgns
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${CGNS_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCGNS_BUILD_SHARED:BOOL=ON -DCGNS_ENABLE_HDF5:BOOL=ON -DHDF5_DIR:PATH=${HDF5_ROOT_DIR}/share/cmake -DHDF5_INCLUDE_PATH:PATH=${HDF5_ROOT_DIR}/include -DHDF5_LIBRARY:FILEPATH=${HDF5_ROOT_DIR}/lib/libhdf5.so -DHDF5_NEED_ZLIB=ON ${CGNS_SRC_DIR}

cython
> python3 setup.py install --prefix=${CYTHON_ROOT_DIR}

occt (Open CASCADE Technology)
> cmake -DINSTALL_DIR:STRING=${CAS_ROOT_DIR} -D3RDPARTY_TCL_DIR:PATH=${TCLTK_ROOT_DIR} -DUSE_TBB:BOOL=ON -D3RDPARTY_TBB_DIR:PATH=${TBB_ROOT_DIR} -D3RDPARTY_FREETYPE_DIR:PATH=${FREETYPE_ROOT_DIR} -DUSE_FREEIMAGE:BOOL=ON -D3RDPARTY_FREEIMAGE_DIR:PATH=${FREEIMAGE_ROOT_DIR} -DCMAKE_BUILD_TYPE:STRING=Release ${CAS_SRC_DIR}

paraview
cmake -DCMAKE_INSTALL_PREFIX:STRING=${PARAVIEW_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_FLAGS:STRING=-m64 -DCMAKE_C_FLAGS:STRING=-m64 -DPARAVIEW_BUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_LIBDIR:STRING=lib -DPARAVIEW_BUILD_TESTING:BOOL=OFF -DPARAVIEW_INSTALL_DEVELOPMENT_FILES:BOOL=ON -DOpenGL_GL_PREFERENCE:STRING=LEGACY -DPARAVIEW_ENABLE_RAYTRACING:BOOL=ON -DVTK_ENABLE_OSPRAY:BOOL=ON -Dembree_DIR:PATH=${EMBREE_ROOT_DIR}/lib/cmake/embree-${VERSION_EMBREE} -DTBB_ROOT:PATH=${TBB_ROOT_DIR} -Drkcommon_DIR:PATH=${RKCOMMON_ROOT_DIR}/lib/cmake/rkcommon-${VERSION_RKCOMMON} -Dopenvkl_DIR:PATH=${OPENVKL_ROOT_DIR}/lib/cmake/openvkl-${VERSION_OPENVKL} -DVTK_USE_64BIT_IDS:BOOL=ON -DVTK_REPORT_OPENGL_ERRORS:BOOL=OFF -DVTK_MODULE_ENABLE_VTK_RenderingLOD:INTERNAL=YES -DVTK_MODULE_ENABLE_VTK_FiltersCore:INTERNAL=YES -DVTK_MODULE_ENABLE_VTK_CommonCore:INTERNAL=YES -DVTK_MODULE_ENABLE_VTK_IOCore:INTERNAL=YES -DVTK_MODULE_ENABLE_VTK_IOEnSight:INTERNAL=YES -DVTK_MODULE_ENABLE_VTK_IOInfovis:INTERNAL=YES -DPARAVIEW_USE_QT:BOOL=ON -DVTK_BUILD_QT_DESIGNER_PLUGIN:BOOL=OFF -DPARAVIEW_USE_PYTHON:BOOL=ON -DVTK_WRAP_PYTHON:BOOL=ON -DPython3_INCLUDE_DIR:STRING=${PYTHON_ROOT_DIR}/include/python3.6 -DPython3_LIBRARY:STRING=${PYTHON_ROOT_DIR}/lib/libpython3.6.so -DVTK_PYTHON_FULL_THREADSAFE:BOOL=ON -DVTK_NO_PYTHON_THREADS:BOOL=OFF -DVTK_PYTHON_VERSION:STRING=3 -DVTK_WRAP_JAVA:BOOL=OFF -DPARAVIEW_USE_MPI:BOOL=OFF -DVTK_MODULE_USE_EXTERNAL_VTK_hdf5:BOOL=ON -DHDF5_DIR:PATH=${HDF5_ROOT_DIR}/share/cmake/hdf5 -DHDF5_USE_STATIC_LIBRARIES:BOOL=OFF -DPARAVIEW_ENABLE_VISITBRIDGE:BOOL=ON -DBOOST_ROOT:PATH=${BOOST_ROOT_DIR} -DBoost_NO_BOOST_CMAKE:BOOL=ON -DBoost_NO_SYSTEM_PATHS:BOOL=ON -DVTK_MODULE_USE_EXTERNAL_VTK_gl2ps:BOOL=OFF -DVTK_MODULE_USE_EXTERNAL_VTK_libxml2:BOOL=ON -DLIBXML2_INCLUDE_DIR:STRING=${LIBXML2_ROOT_DIR}/include/libxml2 -DLIBXML2_LIBRARIES:STRING=${LIBXML2_ROOT_DIR}/lib/libxml2.so -DVTK_MODULE_USE_EXTERNAL_VTK_freetype:BOOL=ON -DVTK_MODULE_USE_EXTERNAL_ParaView_cgns:BOOL=ON -DCGNS_INCLUDE_DIR:PATH=${CGNS_ROOT_DIR}/include -DCGNS_LIBRARY:PATH=${CGNS_ROOT_DIR}/lib/libcgns.so -DVTK_MODULE_ENABLE_ParaView_cgns:INTERNAL=YES -DVTK_MODULE_ENABLE_ParaView_VTKExtensionsCGNSReader:INTERNAL=YES -DVTK_MODULE_ENABLE_ParaView_VTKExtensionsCGNSWriter:INTERNAL=YES -DPARAVIEW_PLUGINS_DEFAULT:BOOL=ON -DPARAVIEW_PLUGIN_ENABLE_Moments:BOOL=OFF -DPARAVIEW_PLUGIN_ENABLE_SLACTools:BOOL=OFF -DPARAVIEW_PLUGIN_ENABLE_SierraPlotTools:BOOL=OFF -DPARAVIEW_PLUGIN_ENABLE_PacMan:BOOL=OFF -DPARAVIEW_PLUGIN_ENABLE_pvblot:BOOL=OFF -DPARAVIEW_USE_CATALYST:BOOL=ON -DCATALYST_BUILD_STUB_IMPLEMENTATION:BOOL=ON ${PARAVIEW_SRC_DIR}

pillow
> python3 ./setup.py install --prefix=${PILLOW_ROOT_DIR}

pyqtsip
> python3 ./setup.py install --prefix=${PYQTSIP_ROOT_DIR}

pyqt
> python3 ./configure.py -b ${PYQT5_ROOT_DIR}/bin -d ${PYQT5_ROOT_DIR} -v ${PYQT5_ROOT_DIR}/sip --stubsdir=${PYQT5_ROOT_DIR}/PyQt5 --confirm-license --designer-plugindir=${PYQT5_ROOT_DIR}/plugins/designer --qml-plugindir=${PYQT5_ROOT_DIR}/plugins/qml --no-qsci-api

python3
> ./configure --prefix=${PYTHON_ROOT_DIR} --enable-shared --with-threads --with-libs=-lstdc++ --without-pymalloc --enable-optimizations CFLAGS=-m64 CXXFLAGS=-m64 CPPFLAGS=-I${TCLTK_ROOT_DIR}/include LDFLAGS=-L${TCLTK_ROOT_DIR}/lib 

sphinx (and related products)
 * alabaster
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * babel
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}
 
 * certifi
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * chardet
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * click
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * docutils
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * idna
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}
 
 * imagesize
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * jinja2
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * markupSafe
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * packaging
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * pockets
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * pygments
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * pyparsing
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * pytz
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * requests
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * setuptools
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * six
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * snowballstemmer
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * sphinx
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}
 
 * sphinxcontrib-websupport
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * sphinx-intl
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

 * urllib3
 > python3 ./setup.py install --prefix=${SPHINX_ROOT_DIR}

boost
> ./bootstrap.sh  --prefix=${BOOST_ROOT_DIR} --with-toolset=gcc --with-python=${PYTHON_ROOT_DIR}/bin/python3

cmake
> ./configure --prefix=${CMAKE_ROOT_DIR}

doxygen
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${DOXYGEN_ROOT_DIR} ${DOXYGEN_SRC_DIR}

embree
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${EMBREE_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_COMPILER:STRING=clang++ -DCMAKE_C_COMPILER:STRING=clang -DEMBREE_TUTORIALS:BOOL=OFF -DEMBREE_TASKING_SYSTEM:STRING=TBB -DTBB_ROOT:PATH=${TBB_ROOT_DIR} -DEMBREE_ISA_AVX512SKX:BOOL=OFF -DEMBREE_ISPC_SUPPORT:BOOL=ON -DCMAKE_INSTALL_LIBDIR:STRING=lib ${EMBREE_SRC_DIR}

freeimage (no specific configuration procedure, options are passed to make)
> make -f Makefile.gnu
> make -f Makefile.gnu DESTDIR=${FREEIMAGE_ROOT_DIR} install
        
freetype
> ./configure --prefix=${FREETYPE_ROOT_DIR} --with-harfbuzz=no CFLAGS='-m64 -fPIC' CPPFLAGS='-m64 -fPIC'

gmsh
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${GMSH_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DENABLE_BUILD_SHARED:BOOL=ON -DENABLE_ACIS:BOOL=OFF -DENABLE_FLTK:BOOL=OFF -DENABLE_MED:BOOL=OFF -DENABLE_ONELAB_METAMODEL:BOOL=OFF -DENABLE_PARSER:BOOL=ON -DENABLE_PETSC:BOOL=OFF -DENABLE_PRIVATE_API:BOOL=ON -DCMAKE_INSTALL_LIBDIR:STRING=lib -DENABLE_CGNS:BOOL=OFF ${GMSH_SRC_DIR}

graphvis
> ./configure --prefix=${GRAPHVIS_ROOT_DIR} --disable-rpath --disable-tcl --disable-perl --disable-php --disable-ocaml --disable-lua --disable-java --disable-guile --disable-sharp --disable-swig --disable-python --disable-r --disable-ruby --without-expat --without-qt CFLAGS=-m64 CXXFLAGS=-m64

h5py (and related products)
 * nose
 > python3 ./setup.py install --prefix=${H5PY_ROOT_DIR}

 * pkgconfig
 > python3 ./setup.py install --prefix=${H5PY_ROOT_DIR}

 * h5py
 > python3 ./setup.py install --prefix=${H5PY_ROOT_DIR}

hdf5
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${HDF5_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DHDF5_ENABLE_THREADSAFE:BOOL=ON -DALLOW_UNSUPPORTED:BOOL=ON -DBUILD_SHARED_LIBS:BOOL=ON -DHDF5_BUILD_TOOLS:BOOL=ON -DHDF5_BUILD_HL_LIB:BOOL=ON -DHDF5_ENABLE_Z_LIB_SUPPORT:BOOL=ON ${HDF5_SRC_DIR}

ispc (install from binaries package)
> tar xzf ${ISPC_ARCHIVE} -C ${ISPC_ROOT_DIR}

libxml2
> ./configure --prefix=${LIBXML2_ROOT_DIR}

llvm
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${LLVM_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DPYTHON_EXECUTABLE:STRING=${PYTHON_ROOT_DIR}/bin/python3.6 -DLLVM_INSTALL_UTILS:BOOL=ON -DLLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN:BOOL=ON -DLLVM_ENABLE_DUMP:BOOL=ON ${LLVM_SRC_DIR}

matplotlib (and related products)
 * cycler
 > python3 ./setup.py install --prefix=${MATPLOTLIB_ROOT_DIR}
 
 * dateutil
 > python3 ./setup.py install --prefix=${MATPLOTLIB_ROOT_DIR}

 * kiwisolver
 > python3 ./setup.py install --prefix=${MATPLOTLIB_ROOT_DIR}

 * matplotlib
 > python3 ./setup.py install --prefix=${MATPLOTLIB_ROOT_DIR}

medfile
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${MEDFILE_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DMEDFILE_BUILD_SHARED_LIBS:BOOL=ON -DMEDFILE_BUILD_TESTS:BOOL=OFF -DMEDFILE_INSTALL_DOC:BOOL=ON -DMEDFILE_BUILD_PYTHON:BOOL=ON -DPYTHON_INCLUDE_DIR:PATH=${PYTHON_ROOT_DIR}/include/python3.6 -DPYTHON_LIBRARY:FILEPATH=${PYTHON_ROOT_DIR}/lib/libpython3.6.so -DHDF5_ROOT:PATH=${HDF5_ROOT_DIR} -DMED_MEDINT_TYPE=long ${MEDFILE_SRC_DIR}
(note: build as FFLAGS=-fdefault-integer-8 cmake ${cmake_options})

mesa
> configure --prefix=${MESA_ROOT_DIR} --enable-opengl --disable-gles1 --disable-gles2 --disable-va --disable-xvmc --disable-vdpau --enable-shared-glapi --disable-texture-float --enable-llvm --disable-llvm-shared-libs --with-llvm-prefix=${LLVM_ROOT_DIR} --with-gallium-drivers=swrast --disable-dri --with-dri-drivers= --disable-egl --with-platforms=x11 --disable-gbm --enable-glx=gallium-xlib --disable-osmesa --enable-gallium-osmesa --enable-autotools

metis
> make config prefix=${METIS_ROOT_DIR} shared=1

mpi4py
> python3 ./setup.py install --prefix=${MPI4PY_ROOT_DIR}

netgen
> aclocal -I m4
> libtoolize --force --copy --automake
> autoconf
> automake --copy --gnu --add-missing
> ./configure --prefix=${NETGEN_ROOT_DIR} --with-occ=${CAS_ROOT_DIR} --with-tcl=${TCLTK_ROOT_DIR}/lib --with-tk=${TCLTK_ROOT_DIR}/lib --with-tclinclude=${TCLTK_ROOT_DIR}/include CXXFLAGS=-O2 -m64 -std=c++0x

nlopt 
> ./configure --prefix=${NLOPT_ROOT_DIR} --enable-shared --with-python PYTHON=`which python3` PYTHON_CONFIG=`which python3-config` CFLAGS=-m64 -fPIC CPPFLAGS=-m64 -fPIC

numpy (and related products)
 * lapack
 > cmake -DCMAKE_INSTALL_PREFIX:STRING=${NUMPY_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_SHARED_LIBS:BOOL=ON -DCMAKE_INSTALL_LIBDIR:STRING=lib -DCMAKE_CXX_FLAGS:STRING=-fPIC -DCMAKE_C_FLAGS:STRING=-fPIC ${LAPACK_SRC_DIR}

 * numpy
 > python3 ./setup.py install --prefix=${NUMPY_ROOT_DIR}

omniorb
> ./configure --prefix=${OMNIORB_ROOT_DIR} PYTHON=${PYTHON_ROOT_DIR}/bin/python3

omniorbpy
> ./configure --prefix=${OMNIORB_ROOT_DIR} PYTHON=${PYTHON_ROOT_DIR}/bin/python3

opencv
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${OPENCV_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DBUILD_opencv_java:BOOL=OFF -DWITH_GTK:BOOL=OFF -DWITH_LAPACK:BOOL=OFF ${OPENCV_SRC_DIR}

openmpi
> ./configure --prefix=${OPENMPI_ROOT_DIR} CFLAGS=-m64 CXXFLAGS=-m64

openvkl
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${OPENVKL_ROOT_DIR} -DCMAKE_INSTALL_LIBDIR:STRING=lib -DBUILD_TESTING:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -Drkcommon_DIR:PATH=${RKCOMMON_ROOT_DIR}/lib/cmake/rkcommon-${VERSION_RKCOMMON} -DBUILD_EXAMPLES:BOOL=OFF ${OPENVKL_SRC_DIR}

ospray
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${OSPRAY_ROOT_DIR} -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release -DCMAKE_CXX_COMPILER:STRING=clang++ -DCMAKE_C_COMPILER:STRING=clang -DOSPRAY_TASKING_SYSTEM:STRING=TBB -DOSPRAY_ENABLE_APPS:BOOL=OFF -DTBB_ROOT:PATH=${TBB_ROOT_DIR} -Dembree_DIR:PATH=${EMBREE_ROOT_DIR}/lib/cmake/embree-${VERSION_EMBREE} -Drkcommon_DIR:PATH=${RKCOMMON_ROOT_DIR}/lib/cmake/rkcommon-${VERSION_RKCOMMON} -Dopenvkl_DIR:PATH=${OPENVKL_ROOT_DIR}/lib/cmake/openvkl-${VERSION_OPENVKL} ${OSPRAY_SRC_DIR}

planegcs
> cmake -DCMAKE_INSTALL_PREFIX:STRING=${PLANEGCS_ROOT_DIR} ${PLANEGCS_SRC_DIR}

psutil
> python3 ./setup.py install --prefix=${PSUTIL_ROOT_DIR}

qt5
> ./configure -prefix ${QT5_ROOT_DIR} -no-separate-debug-info -opensource -confirm-license -release -no-rpath -verbose -qt-libpng -qt-xcb -no-eglfs -dbus-runtime -skip qtwebengine -skip wayland -skip qtgamepad -system-freetype -qt-harfbuzz -no-openssl -no-glib -nomake examples -nomake tests

qwt
> ./qmake

rkcommon
> cmake -DCMAKE_INSTALL_PREFIX=${RKCOMMON_ROOT_DIR} -DCMAKE_INSTALL_LIBDIR:STRING=lib -DBUILD_TESTING:BOOL=OFF -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DCMAKE_BUILD_TYPE:STRING=Release ${RKCOMMON_SRC_DIR}

scipy
> python3 ./setup.py install --prefix=${SCIPY_ROOT_DIR}

scotch (no specific configuration procedure, options are passed to make)
> make prefix=${SCOTCH_ROOT_DIR}

sip
> python3 ./setup.py install --prefix=${SIP_ROOT_DIR}

swig
> ./configure --prefix=${SWIG_ROOT_DIR} --with-boost=${BOOST_ROOT_DIR} --with-python3=${PYTHON_ROOT_DIR}/bin/python3 --without-octave --with-tcl=${TCLTK_ROOT_DIR} --program-suffix=3.0 CFLAGS=-m64 CXXFLAGS=-m64

tbb (no specific configuration procedure, use pre-compiled binaries from the tbb web-site)
> tar xzf ${TBB_ARCHIVE} -C ${TBB_ROOT_DIR}

tcl
> ./configure --prefix=${TCLTK_ROOT_DIR} --enable-gcc --enable-shared --enable-threads --enable-64bit

tclx
> ./configure --prefix=${TCLTK_ROOT_DIR} --enable-gcc --enable-shared --enable-threads --with-tcl=${TCLTK_ROOT_DIR}/lib --with-tk=${TCLTK_ROOT_DIR}/lib --enable-64bit

tk
> ./configure --prefix=${TCLTK_ROOT_DIR} --enable-gcc --enable-shared --enable-threads --with-tcl=${TCLTK_ROOT_DIR}/lib --enable-64bit

toml
> python3 ./setup.py install --prefix=${TOML_ROOT_DIR}
